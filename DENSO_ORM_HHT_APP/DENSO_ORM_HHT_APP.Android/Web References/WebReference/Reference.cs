//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DENSO_ORM_HHT_APP.Droid.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback APKDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Kanban_ProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginValidateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://192.168.43.236/DENSO_ORM/Service1.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConnectCompletedEventHandler ConnectCompleted;
        
        /// <remarks/>
        public event APKDetailsCompletedEventHandler APKDetailsCompleted;
        
        /// <remarks/>
        public event GetMachineGroupCompletedEventHandler GetMachineGroupCompleted;
        
        /// <remarks/>
        public event Kanban_ProgressCompletedEventHandler Kanban_ProgressCompleted;
        
        /// <remarks/>
        public event LoginValidateCompletedEventHandler LoginValidateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Connect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Connect() {
            object[] results = this.Invoke("Connect", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectAsync() {
            this.ConnectAsync(null);
        }
        
        /// <remarks/>
        public void ConnectAsync(object userState) {
            if ((this.ConnectOperationCompleted == null)) {
                this.ConnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectOperationCompleted);
            }
            this.InvokeAsync("Connect", new object[0], this.ConnectOperationCompleted, userState);
        }
        
        private void OnConnectOperationCompleted(object arg) {
            if ((this.ConnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/APKDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string APKDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RecepientType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MachineGroup, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MachineName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ModelName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string time, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ShiftName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Operation, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Type) {
            object[] results = this.Invoke("APKDetails", new object[] {
                        RecepientType,
                        MachineGroup,
                        MachineName,
                        ModelName,
                        time,
                        ShiftName,
                        Operation,
                        Type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void APKDetailsAsync(string RecepientType, string MachineGroup, string MachineName, string ModelName, string time, string ShiftName, string Operation, string Type) {
            this.APKDetailsAsync(RecepientType, MachineGroup, MachineName, ModelName, time, ShiftName, Operation, Type, null);
        }
        
        /// <remarks/>
        public void APKDetailsAsync(string RecepientType, string MachineGroup, string MachineName, string ModelName, string time, string ShiftName, string Operation, string Type, object userState) {
            if ((this.APKDetailsOperationCompleted == null)) {
                this.APKDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPKDetailsOperationCompleted);
            }
            this.InvokeAsync("APKDetails", new object[] {
                        RecepientType,
                        MachineGroup,
                        MachineName,
                        ModelName,
                        time,
                        ShiftName,
                        Operation,
                        Type}, this.APKDetailsOperationCompleted, userState);
        }
        
        private void OnAPKDetailsOperationCompleted(object arg) {
            if ((this.APKDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APKDetailsCompleted(this, new APKDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetMachineGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetMachineGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Type) {
            object[] results = this.Invoke("GetMachineGroup", new object[] {
                        Type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineGroupAsync(string Type) {
            this.GetMachineGroupAsync(Type, null);
        }
        
        /// <remarks/>
        public void GetMachineGroupAsync(string Type, object userState) {
            if ((this.GetMachineGroupOperationCompleted == null)) {
                this.GetMachineGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineGroupOperationCompleted);
            }
            this.InvokeAsync("GetMachineGroup", new object[] {
                        Type}, this.GetMachineGroupOperationCompleted, userState);
        }
        
        private void OnGetMachineGroupOperationCompleted(object arg) {
            if ((this.GetMachineGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineGroupCompleted(this, new GetMachineGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Kanban_Progress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet Kanban_Progress([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MachineGroup, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MachineName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Barcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PartNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Qty, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ModelNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserdID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ChangeOver) {
            object[] results = this.Invoke("Kanban_Progress", new object[] {
                        MachineGroup,
                        MachineName,
                        Barcode,
                        TransactionType,
                        Type,
                        PartNo,
                        Qty,
                        ModelNo,
                        UserdID,
                        ChangeOver});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Kanban_ProgressAsync(string MachineGroup, string MachineName, string Barcode, string TransactionType, string Type, string PartNo, string Qty, string ModelNo, string UserdID, string ChangeOver) {
            this.Kanban_ProgressAsync(MachineGroup, MachineName, Barcode, TransactionType, Type, PartNo, Qty, ModelNo, UserdID, ChangeOver, null);
        }
        
        /// <remarks/>
        public void Kanban_ProgressAsync(string MachineGroup, string MachineName, string Barcode, string TransactionType, string Type, string PartNo, string Qty, string ModelNo, string UserdID, string ChangeOver, object userState) {
            if ((this.Kanban_ProgressOperationCompleted == null)) {
                this.Kanban_ProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKanban_ProgressOperationCompleted);
            }
            this.InvokeAsync("Kanban_Progress", new object[] {
                        MachineGroup,
                        MachineName,
                        Barcode,
                        TransactionType,
                        Type,
                        PartNo,
                        Qty,
                        ModelNo,
                        UserdID,
                        ChangeOver}, this.Kanban_ProgressOperationCompleted, userState);
        }
        
        private void OnKanban_ProgressOperationCompleted(object arg) {
            if ((this.Kanban_ProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Kanban_ProgressCompleted(this, new Kanban_ProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LoginValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LoginValidate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Type) {
            object[] results = this.Invoke("LoginValidate", new object[] {
                        UserID,
                        Password,
                        Type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginValidateAsync(string UserID, string Password, string Type) {
            this.LoginValidateAsync(UserID, Password, Type, null);
        }
        
        /// <remarks/>
        public void LoginValidateAsync(string UserID, string Password, string Type, object userState) {
            if ((this.LoginValidateOperationCompleted == null)) {
                this.LoginValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginValidateOperationCompleted);
            }
            this.InvokeAsync("LoginValidate", new object[] {
                        UserID,
                        Password,
                        Type}, this.LoginValidateOperationCompleted, userState);
        }
        
        private void OnLoginValidateOperationCompleted(object arg) {
            if ((this.LoginValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginValidateCompleted(this, new LoginValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConnectCompletedEventHandler(object sender, ConnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void APKDetailsCompletedEventHandler(object sender, APKDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APKDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APKDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetMachineGroupCompletedEventHandler(object sender, GetMachineGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Kanban_ProgressCompletedEventHandler(object sender, Kanban_ProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kanban_ProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Kanban_ProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginValidateCompletedEventHandler(object sender, LoginValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591